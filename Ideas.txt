
Slider code to limit values using a slider
<input id="clickMe" type="button" value="clickme"/>
<input id="minYear" type="range" min="1975" max="2010" onchange="setMinValue('minYear','p1')">
<label id="p1"></label>
<input id="maxYear" type="range" min="1975" max="2010" onchange="setMaxValue('maxYear','p2')">
<label id="p2"></label> </span>

function setMinValue(minYear, p1) {
    var x = document.getElementById(p1);
    var y = document.getElementById(minYear);
    x.innerHTML = y.value;
}

function setMaxValue(maxYear, p2) {
    var x = document.getElementById(p2);
    var y = document.getElementById(maxYear);
    x.innerHTML = y.value;
}

document.getElementById("clickMe").onclick = update;
window.onload = function () {
    setMinValue('minYear', 'p1');
    setMaxValue('maxYear', 'p2');
}

function yearFilter(min, max) {
    return function (x) {
        if (x.YEAR <= max && x.YEAR >= min) return x
    }
};


var createCheckBoxes = function (treeData) {
    var checkboxGroup = document.createElement("div");
    checkboxGroup.className = "checkboxGroup";
    var x = 0;
    var checkboxColumn = document.createElement("div");
    checkboxColumn.className = "CheckBoxColumn";

    for (var property in dataset[0]) {
        if (dataset[0].hasOwnProperty(property)) {

            var checkboxLineItem = document.createElement("div");
            // Create Checkboxes for each Field
            var checkbox = document.createElement('input');
            checkbox.type = "checkbox";
            checkbox.name = property;
            checkbox.value = property;
            checkbox.id = property;
            checkbox.className = "form-check-input"
            checkbox.onclick = function () {
                console.log(this.id)
            };
            // Create Label for Each Checkbox
            var label = document.createElement('label')
            label.htmlFor = checkbox.id;
            label.className = "checkBoxFont"
            label.appendChild(document.createTextNode(checkbox.name));
            checkboxLineItem.appendChild(checkbox);
            checkboxLineItem.appendChild(label);
            x++;

            checkboxColumn.appendChild(checkboxLineItem);
            checkboxGroup.appendChild(checkboxColumn);
            if (x >= treeData) {
                checkboxColumn = document.createElement("div");
                checkboxColumn.className = "CheckBoxColumn";
                x = 0;
            }

        }
    }
    var parentDiv = document.getElementById("afterCheckboxes").parentNode;
    var sp2 = document.getElementById("afterCheckboxes");
    parentDiv.insertBefore(checkboxGroup, sp2);
    console.log(property)
}


function settimespanandrun() {
    var firstYear = parseInt(minYear.value);
    var lastYear = parseInt(maxYear.value);
    var years = yearFilter(firstYear, lastYear);
    var yearFilterDataSet = dataset.filter(years);
    return yearFilterDataSet;

};